LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.NUMERIC_STD.ALL;

entity carwash is

    port (clk : in std_logic;
        st,tc : in std_logic;
		  water,brush : out std_logic);
end entity carwash;

architecture arc of carwash is

component counter5bit is
	port ( clk , rst : in std_logic ;
	q: out std_logic_vector (4 downto 0) );
end component ;

signal res_time, t10, t20 : std_logic ;
signal q_out : std_logic_vector (4 downto 0);

type state_type is (token, start, s1, s2, s3);

signal ps,ns : state_type := token ;


begin 

coun : counter5bit port map ( clk , res_time , q_out );
t10 <= q_out (3) and q_out (1);
t20 <= q_out (4) and q_out (2);

process ( clk )
begin
	if (clk'event and clk='1') then
			ps <= ns ;
	end if ;
end process ;

process(ps, t10, t20, st, tc)
	begin
	
	case (ps) is 
	
	when token =>
--		brush <= '0';
--		water <= '0';
		if(tc = '1') then
		ns <= start;
		else 
		ns <= token;end if;
	
	when start =>
--		brush <= '0';
--		water <= '0';
		if(st = '1') then
		ns <= s1;
		else 
		ns <= start;end if;
	
	when s1 =>
--		brush <= '0';
--		water <= '1';
		if(t10 = '1') then
		ns <= s2;
		else 
		ns <= s1;end if;
		
	when s2 =>
--		brush <= '1';
--		water <= '1';
		if(t20 = '1') then
		ns <= s3;
		else 
		ns <= s2;end if;
		
	when s3 =>
--		brush <= '1';
--		water <= '0';
		if(t10 = '1') then
		ns <= token;
		else 
		ns <= s3;end if;
		
		
end case;
end process;
brush <= '1' when (ps = s2) or (ps = s3) else '0';
water <= '1' when (ps = s1) or (ps = s2) else '0';
res_time <= '1' when (( ps = s1) and (t10 = '1')) or
							((ps = s2) and (t20 = '1')) or
							((ps = s3) and (t10 = '1')) or
							((ps = start) and (st = '1'))
							else '0';
end arc;